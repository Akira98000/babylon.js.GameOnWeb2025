import {
  FlowGraphBlock,
  RichTypeAny,
  init_flowGraphBlock,
  init_flowGraphRichTypes
} from "./chunk-OTNMP3BJ.js";
import {
  RegisterClass,
  init_typeStore
} from "./chunk-FYD2IJRD.js";
import {
  __esm
} from "./chunk-DZZM6G22.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Data/flowGraphGetPropertyBlock.js
var FlowGraphGetPropertyBlock;
var init_flowGraphGetPropertyBlock = __esm({
  "node_modules/@babylonjs/core/FlowGraph/Blocks/Data/flowGraphGetPropertyBlock.js"() {
    init_flowGraphBlock();
    init_flowGraphRichTypes();
    init_typeStore();
    FlowGraphGetPropertyBlock = class extends FlowGraphBlock {
      constructor(config) {
        super(config);
        this.config = config;
        this.object = this.registerDataInput("object", RichTypeAny, config.object);
        this.propertyName = this.registerDataInput("propertyName", RichTypeAny, config.propertyName);
        this.value = this.registerDataOutput("value", RichTypeAny);
        this.isValid = this.registerDataOutput("isValid", RichTypeAny, false);
        this.customGetFunction = this.registerDataInput("customGetFunction", RichTypeAny);
      }
      _updateOutputs(context) {
        const getter = this.customGetFunction.getValue(context);
        let value;
        if (getter) {
          value = getter(this.object.getValue(context), this.propertyName.getValue(context), context);
        } else {
          const target = this.object.getValue(context);
          const propertyName = this.propertyName.getValue(context);
          value = target && propertyName ? this._getPropertyValue(target, propertyName) : void 0;
        }
        if (value === void 0) {
          this.value.resetToDefaultValue(context);
          this.isValid.setValue(false, context);
        } else {
          this.value.setValue(value, context);
          this.isValid.setValue(true, context);
        }
      }
      _getPropertyValue(target, propertyName) {
        const path = propertyName.split(".");
        let value = target;
        for (const prop of path) {
          value = value[prop];
          if (value === void 0) {
            return;
          }
        }
        return value;
      }
      getClassName() {
        return "FlowGraphGetPropertyBlock";
      }
    };
    RegisterClass("FlowGraphGetPropertyBlock", FlowGraphGetPropertyBlock);
  }
});

export {
  FlowGraphGetPropertyBlock,
  init_flowGraphGetPropertyBlock
};
//# sourceMappingURL=chunk-PFPO4ATX.js.map
