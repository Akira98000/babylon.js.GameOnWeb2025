import {
  AbstractNamedAudioNode,
  _GetVolumeAudioProperty,
  _GetVolumeAudioSubNode,
  init_abstractAudioNode,
  init_volumeAudioSubNode
} from "./chunk-JEUOGWAP.js";
import {
  __esm
} from "./chunk-DZZM6G22.js";

// node_modules/@babylonjs/core/AudioV2/abstractAudio/abstractAudioBus.js
var AbstractAudioBus;
var init_abstractAudioBus = __esm({
  "node_modules/@babylonjs/core/AudioV2/abstractAudio/abstractAudioBus.js"() {
    init_abstractAudioNode();
    init_volumeAudioSubNode();
    AbstractAudioBus = class extends AbstractNamedAudioNode {
      constructor(name, engine) {
        super(
          name,
          engine,
          3
          /* AudioNodeType.HAS_INPUTS_AND_OUTPUTS */
        );
      }
      /**
       * The output volume of the bus.
       */
      get volume() {
        return _GetVolumeAudioProperty(this._subGraph, "volume");
      }
      set volume(value) {
        const node = _GetVolumeAudioSubNode(this._subGraph);
        if (!node) {
          throw new Error("No volume subnode");
        }
        node.volume = value;
      }
      /**
       * Releases associated resources.
       */
      dispose() {
        super.dispose();
        this._subGraph.dispose();
      }
    };
  }
});

export {
  AbstractAudioBus,
  init_abstractAudioBus
};
//# sourceMappingURL=chunk-AY2Q6TMP.js.map
