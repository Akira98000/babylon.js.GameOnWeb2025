import {
  ShaderStore,
  init_shaderStore
} from "./chunk-CTSQY2GW.js";
import {
  __esm
} from "./chunk-DZZM6G22.js";

// node_modules/@babylonjs/core/ShadersWGSL/meshUVSpaceRendererMasker.vertex.js
var name, shader, meshUVSpaceRendererMaskerVertexShaderWGSL;
var init_meshUVSpaceRendererMasker_vertex = __esm({
  "node_modules/@babylonjs/core/ShadersWGSL/meshUVSpaceRendererMasker.vertex.js"() {
    init_shaderStore();
    name = "meshUVSpaceRendererMaskerVertexShader";
    shader = `attribute uv: vec2f;varying vUV: vec2f;@vertex
fn main(input : VertexInputs)->FragmentInputs {vertexOutputs.position= vec4f( vec2f(input.uv.x,input.uv.y)*2.0-1.0,0.,1.0);vertexOutputs.vUV=input.uv;}`;
    ShaderStore.ShadersStoreWGSL[name] = shader;
    meshUVSpaceRendererMaskerVertexShaderWGSL = { name, shader };
  }
});

export {
  meshUVSpaceRendererMaskerVertexShaderWGSL,
  init_meshUVSpaceRendererMasker_vertex
};
//# sourceMappingURL=chunk-5KXEQG3I.js.map
