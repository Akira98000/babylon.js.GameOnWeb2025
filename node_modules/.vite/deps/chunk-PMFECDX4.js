import {
  ShaderStore,
  init_shaderStore
} from "./chunk-CTSQY2GW.js";
import {
  __esm
} from "./chunk-DZZM6G22.js";

// node_modules/@babylonjs/core/Shaders/blackAndWhite.fragment.js
var name, shader, blackAndWhitePixelShader;
var init_blackAndWhite_fragment = __esm({
  "node_modules/@babylonjs/core/Shaders/blackAndWhite.fragment.js"() {
    init_shaderStore();
    name = "blackAndWhitePixelShader";
    shader = `varying vec2 vUV;uniform sampler2D textureSampler;uniform float degree;
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void) 
{vec3 color=texture2D(textureSampler,vUV).rgb;float luminance=dot(color,vec3(0.3,0.59,0.11)); 
vec3 blackAndWhite=vec3(luminance,luminance,luminance);gl_FragColor=vec4(color-((color-blackAndWhite)*degree),1.0);}`;
    ShaderStore.ShadersStore[name] = shader;
    blackAndWhitePixelShader = { name, shader };
  }
});

export {
  blackAndWhitePixelShader,
  init_blackAndWhite_fragment
};
//# sourceMappingURL=chunk-PMFECDX4.js.map
