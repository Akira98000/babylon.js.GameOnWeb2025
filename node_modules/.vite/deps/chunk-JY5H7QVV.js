import {
  ShaderStore,
  init_shaderStore
} from "./chunk-CTSQY2GW.js";
import {
  __esm
} from "./chunk-DZZM6G22.js";

// node_modules/@babylonjs/core/Shaders/iblVoxelGrid.vertex.js
var name, shader, iblVoxelGridVertexShader;
var init_iblVoxelGrid_vertex = __esm({
  "node_modules/@babylonjs/core/Shaders/iblVoxelGrid.vertex.js"() {
    init_shaderStore();
    name = "iblVoxelGridVertexShader";
    shader = `attribute vec3 position;attribute vec3 normal;varying vec3 vNormalizedPosition;uniform mat4 world;uniform mat4 invWorldScale;uniform mat4 viewMatrix;void main(void) {gl_Position=viewMatrix*invWorldScale*world*vec4(position,1.);vNormalizedPosition.xyz=gl_Position.xyz*0.5+0.5;
#ifdef IS_NDC_HALF_ZRANGE
gl_Position.z=gl_Position.z*0.5+0.5;
#endif
}`;
    ShaderStore.ShadersStore[name] = shader;
    iblVoxelGridVertexShader = { name, shader };
  }
});

export {
  iblVoxelGridVertexShader,
  init_iblVoxelGrid_vertex
};
//# sourceMappingURL=chunk-JY5H7QVV.js.map
