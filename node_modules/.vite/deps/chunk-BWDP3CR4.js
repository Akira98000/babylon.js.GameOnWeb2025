import {
  FlowGraphExecutionBlockWithOutSignal,
  init_flowGraphExecutionBlockWithOutSignal
} from "./chunk-XBHWJPNH.js";
import {
  RichTypeAny,
  init_flowGraphRichTypes
} from "./chunk-OTNMP3BJ.js";
import {
  RegisterClass,
  init_typeStore
} from "./chunk-FYD2IJRD.js";
import {
  Logger,
  init_logger
} from "./chunk-RB67CL7C.js";
import {
  __esm
} from "./chunk-DZZM6G22.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/flowGraphConsoleLogBlock.js
var FlowGraphConsoleLogBlock;
var init_flowGraphConsoleLogBlock = __esm({
  "node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/flowGraphConsoleLogBlock.js"() {
    init_flowGraphExecutionBlockWithOutSignal();
    init_flowGraphRichTypes();
    init_typeStore();
    init_logger();
    FlowGraphConsoleLogBlock = class extends FlowGraphExecutionBlockWithOutSignal {
      constructor(config) {
        super(config);
        this.message = this.registerDataInput("message", RichTypeAny);
        this.logType = this.registerDataInput("logType", RichTypeAny, "log");
      }
      /**
       * @internal
       */
      _execute(context) {
        const typeValue = this.logType.getValue(context);
        const messageValue = this.message.getValue(context);
        if (typeValue === "warn") {
          Logger.Warn(messageValue);
        } else if (typeValue === "error") {
          Logger.Error(messageValue);
        } else {
          Logger.Log(messageValue);
        }
        this.out._activateSignal(context);
      }
      /**
       * @returns class name of the block.
       */
      getClassName() {
        return "FlowGraphConsoleLogBlock";
      }
    };
    RegisterClass("FlowGraphConsoleLogBlock", FlowGraphConsoleLogBlock);
  }
});

export {
  FlowGraphConsoleLogBlock,
  init_flowGraphConsoleLogBlock
};
//# sourceMappingURL=chunk-BWDP3CR4.js.map
