import {
  init_helperFunctions
} from "./chunk-QX64VPG5.js";
import {
  ShaderStore,
  init_shaderStore
} from "./chunk-CTSQY2GW.js";
import {
  __esm
} from "./chunk-DZZM6G22.js";

// node_modules/@babylonjs/core/Shaders/layer.fragment.js
var name, shader, layerPixelShader;
var init_layer_fragment = __esm({
  "node_modules/@babylonjs/core/Shaders/layer.fragment.js"() {
    init_shaderStore();
    init_helperFunctions();
    name = "layerPixelShader";
    shader = `varying vec2 vUV;uniform sampler2D textureSampler;uniform vec4 color;
#include<helperFunctions>
#define CUSTOM_FRAGMENT_DEFINITIONS
void main(void) {
#define CUSTOM_FRAGMENT_MAIN_BEGIN
vec4 baseColor=texture2D(textureSampler,vUV);
#if defined(CONVERT_TO_GAMMA)
baseColor.rgb=toGammaSpace(baseColor.rgb);
#elif defined(CONVERT_TO_LINEAR)
baseColor.rgb=toLinearSpace(baseColor.rgb);
#endif
#ifdef ALPHATEST
if (baseColor.a<0.4)
discard;
#endif
gl_FragColor=baseColor*color;
#define CUSTOM_FRAGMENT_MAIN_END
}`;
    ShaderStore.ShadersStore[name] = shader;
    layerPixelShader = { name, shader };
  }
});

export {
  layerPixelShader,
  init_layer_fragment
};
//# sourceMappingURL=chunk-GSRH72VO.js.map
